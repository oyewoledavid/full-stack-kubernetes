apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: full-stack-deployment
  labels:
    app: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client
          image: oyewoledavid/client:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: client-config
                  key: NODE_ENV
            - name: REACT_APP_USERS_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: client-config
                  key: REACT_APP_USERS_SERVICE_URL          

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: full-stack-deployment
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users
          image: oyewoledavid/users:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          readinessProbe:
            httpGet:
              path: /users
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          env:
            - name: FLASK_ENV
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: FLASK_ENV
            - name: APP_SETTINGS
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: APP_SETTINGS
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: DATABASE_URL
            - name: DATABASE_TEST_URL
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: DATABASE_TEST_URL
            - name: CACHE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: CACHE_TYPE
            - name: CACHE_REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: CACHE_REDIS_HOST
            - name: CACHE_REDIS_PORT  
              valueFrom:
                configMapKeyRef:
                  name: users-config
                  key: CACHE_REDIS_PORT_NUMBER



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: full-stack-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx   
    spec:
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
      containers:
        - name: nginx
          image: oyewoledavid/nginx:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:latest
          args:
            - "-nginx.scrape-uri=http://localhost:80/nginx_status"
          ports:
            - containerPort: 9113

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-db
  namespace: full-stack-deployment
  labels:
    app: users-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-db
  template:
    metadata:
      labels:
        app: users-db
    spec:
      volumes:
        - name: users-db-pv
          persistentVolumeClaim:
            claimName: users-db-pvc
      containers:
        - name: users-db
          image: oyewoledavid/users-db:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          env:
            - name: POSTGRES_DB
              value: users_dev
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: users-db-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: users-db-secret
                  key: password
          volumeMounts:
            - name: users-db-pv
              mountPath: /var/lib/postgresql/data


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: full-stack-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: redis-pv
          persistentVolumeClaim:
            claimName: redis-pvc
      containers:
        - name: redis
          image: redis:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          volumeMounts:
            - name: redis-pv
              mountPath: /data
