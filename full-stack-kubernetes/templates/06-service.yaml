apiVersion: v1
kind: Service
metadata:
  name: client
  namespace: full-stack-deployment
  labels:
    app: client
spec:
  selector:
    app: client
  ports:
    - name: metrics
      protocol: TCP
      port: 3000        # Exposes service on port 3000
      targetPort: 3000 # Forwards traffic to React container port (3000)

---
apiVersion: v1
kind: Service
metadata:
  name: users-db
  namespace: full-stack-deployment
  labels:
    app: users-db
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5432"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: users-db
  ports:
    - name: metrics
      protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: full-stack-deployment
  labels:
    app: users
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: users
  ports:
    - name: metrics
      protocol: TCP
      port: 5000
      targetPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: full-stack-deployment
  labels:
    app: nginx
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9113"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: metrics
      port: 9113
      targetPort: 9113
  type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: full-stack-deployment
  labels:
    app: redis
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "6379"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: redis
  ports:
    - name: metrics
      protocol: TCP
      port: 6379
      targetPort: 6379