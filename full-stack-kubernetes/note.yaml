# prometheus-values.yaml

## PROMETHEUS SETTINGS
prometheus:
  prometheusSpec:
    scrapeInterval: 5s
    evaluationInterval: 5s
    externalLabels:
      environment: dev
      team: fullstack

    # pick up only your custom alert rules
    ruleSelector:
      matchLabels:
        alert: full-stack-alert-rules

    # pick up all ServiceMonitors
    serviceMonitorSelector: {}

  # expose Prometheus itself via NodePort
  service:
    type: NodePort
    port: 9090
    nodePort: 30900
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9090"
      prometheus.io/path: "/metrics"


## ALERTMANAGER SETTINGS
alertmanager:
  enabled: true        # make sure it's turned on

  # configure the Alertmanager StatefulSet / Pod spec
  alertmanagerSpec:
    replicas: 1
    # this is required by the prometheus.yaml template
    portName: web
    # you can also add retention, serviceAccountName, etc.

  # expose Alertmanager via NodePort
  service:
    type: NodePort
    port: 9093
    nodePort: 30903
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9093"
      prometheus.io/path: "/metrics"

  # embed your Slack config here
  config:
    global:
      resolve_timeout: 5m
    route:
      receiver: slack-notifications
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
    receivers:
      - name: slack-notifications
        slack_configs:
          - send_resolved: true
            channel: '#alerts'
            api_url: 'https://hooks.slack.com/services/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'


## GRAFANA SETTINGS
grafana:
  enabled: true
  adminPassword: "admin"
  service:
    type: NodePort
    port: 3000
    nodePort: 30902
  sidecar:
    dashboards:
      enabled: true
    datasources:
      enabled: true
